//
// main.cpp
// OOP_DEMO_CAR
//
// Created by wpfang on 2021/3/8.
// Copyright © 2021 wpfang. All rights reserved.
//
#include <iostream>
#include <string> 
using namespace std;
class CCAR { /**類別名稱*/
private: /**只在大括號內存取，不可更改，被繼承。*/
string nickname;
protected:/**可繼承及大括號內存取*/
int light;/**data member*/
int wheel;/**data member*/
public:/**在甚麼地方都可以使用*/
CCAR() :light(2)/**建構子給值*/
{
wheel = 5;/**等號給值*/
cout << "car's constructor(wheel=" << wheel << ")" << endl;
}
CCAR(string nickname) :light(2)/**限制存取*/
{
wheel = 5;
this->nickname = nickname;
cout << "car's constructor(nickname=" << nickname << ")" << endl;
}
~CCAR()/**類別結束*/
{
cout << "car's destructor" << "(" << nickname << ")" << endl;
}
void start()
{
cout << "car's start" << endl;
}
void stop()
{
cout << "car's stop" << endl;
}
void turn()
{
cout << "car's turn" << endl;
}
};/**member function*/
//--------------------------
class CBMW : public CCAR {
/*
 *cbmw有ccae所有功能
*/
public:
CBMW() { light = 4; wheel = 4; cout << "bmw's constructor" << endl; }
~CBMW() { cout << "bmw's destructor" << endl; }
void Abs()/**新增新功能*/
{
cout << "bmw's abs" << endl;
}
void start()/**overriding*/
{
cout << "bmw's start" << endl;
CCAR::start();//scope operator/**範圍運算子*/
/*
 * startup印出車的啟動
}
};
//--------------------------
int main(int argc, const char * argv[]) {
CBMW bmw;
// bmw.light=3;
bmw.start(); /**覆蓋(參數相同)*/
bmw.Abs();/**增加*/
bmw.stop();

return 0;
}
